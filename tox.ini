[tox]
envlist =
  precommit,
  stories-upgrade,
  flake8,
  bandit,
  xenon,
  mypy,
  vale,
  remarklint,
  yamllint,
  jscpd,
  commitlint
isolated_build = true

[testenv:precommit]
basepython = python3.8
skip_install = true
deps =
  pre-commit
commands =
  pre-commit autoupdate
  pre-commit run --all-files
commands_post = sed -i 's/rev: .*$/rev: ""/g' .pre-commit-config.yaml
whitelist_externals = sed

[testenv:stories-upgrade]
basepython = python3.8
extras = stories
deps =
  coverage
  pytest
  pytest-randomly
  pytest-timeout
  PyYAML
  tomlkit
commands =
  pip install ./tests/helpers/.
  coverage run -m pytest {posargs}

[testenv:flake8]
basepython = python3.8
skip_install = true
deps =
  flake8
  flake8-2020
  flake8-bugbear
  flake8-builtins
  flake8-docstrings
  flake8-eradicate
  flake8-executable
  flake8-fixme
  flake8-print
  flake8-pytest
  flake8-pytest-style
  flake8-tidy-imports
commands = flake8

[testenv:bandit]
basepython = python3.8
skip_install = true
deps =
  bandit
commands = bandit -r src/

[testenv:xenon]
basepython = python3.8
skip_install = true
deps =
  xenon
commands = xenon --max-absolute A --max-modules A --max-average A src/

[testenv:mypy]
basepython = python3.8
extras = stories
deps =
  mypy
commands = mypy src/

[testenv:vale]
basepython = python3.8
skip_install = true
deps =
commands = vale --glob='*.md' docs README.md
whitelist_externals = vale

[testenv:remarklint]
basepython = python3.8
skip_install = true
deps =
commands =
  npm install
  npm run lint:md
whitelist_externals = npm

[testenv:yamllint]
basepython = python3.8
skip_install = true
deps =
  yamllint
commands = yamllint --strict .

[testenv:jscpd]
basepython = python3.8
skip_install = true
deps =
commands =
  npm install
  npm run lint:cp
whitelist_externals = npm

[testenv:commitlint]
basepython = python3.8
skip_install = true
deps =
commands =
  npm install
  npm run lint:git
whitelist_externals = npm
